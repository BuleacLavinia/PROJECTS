#include <iostream>
#include <cstring>

using namespace std;

char s[99999999],t[99999999],c[99999999];
long long n,m,p,k,i,a[999999],b[999999],d[999999];

int main()
{
    cin.get(s,99999999); //le citesc ca siruri de caractere pentru a lucra mai usor si pt a memora cat mai multe cifre ale unui sir
    cin.get();
    cin.get(t,99999999);
    cout<<endl<<endl; //las putin spatiu ca sa se vada mai bine

    if(strlen(s)>strlen(t)) //daca sirul s e mai mare decat t
    {
        k=strlen(s)-strlen(t); //vedem care e dif de lungime
        for(i=0; i<k; i++)
            c[i]='0'; //numaram k zerouri intr un vector auxiliar, care vor fi amplasate la inceputul lui t
        strcat(c,t); //il lipim la sfarsitul lui c pe t
        strcpy(t,c); //il copiem in t pe c, astfel t ramanand cu zerourile la inceput
    }
    else if(strlen(t)>strlen(s)) //analog daca s e mai mic
    {
        k=strlen(t)-strlen(s);
        for(i=0; i<k; i++)
            c[i]=0;
        strcat(c,s);
        strcpy(s,c);
    }
    //acum am ramas cu ele egale, oricare era lungimea lor la inceput

    for(i=0; i<strlen(s); i++) //parcurg sirurile pentru "si"
        if((s[i]==t[i]) and (t[i]=='0')) a[++m]=0;  //daca ambele sunt 0, atunci rezultatul e 0
        else if((s[i]==t[i]) and (t[i]=='1')) a[++m]=1; //daca ambele sunt 1, atunci rezultatul e 1
        else a[++m]=0; //daca sunt diferite, una din ele e sigur 0, iar rezultatul e 0

    for(i=0; i<strlen(s); i++) //parcurg sirurile pentru "sau"
        if((s[i]==t[i]) and (s[i]=='0')) b[++p]=0;  //daca ambele sunt 0, atunci rezultatul e 0
        else b[++p]=1; //daca sunt diferite, una din ele e sigur 1, iar rezultatul e 1; respectiv daca ambele sunt 1, rezultatul e 1

    for(i=0; i<strlen(s); i++) //parcurg sirurile pentru "xor"
        if(s[i]==t[i]) d[++n]=0;  //daca sunt egale, rezultatul e 0
        else d[++n]=1; //daca sunt diferite,rezultatul e 1

    //acum afisam vectorii in care am retinut rezultatele
    for(i=1; i<=m; i++)
        cout<<a[i];
    cout<<endl;
    for(i=1; i<=p; i++)
        cout<<b[i];
    cout<<endl;
    for(i=1; i<=n; i++)
        cout<<d[i];
    return 0;
}
